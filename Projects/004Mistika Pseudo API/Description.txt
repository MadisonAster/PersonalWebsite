In the last year of Lit Post, we invested in a new color correction package known as Mistika. Up until this point we had used Nucoda Film Master almost exclusively. I became intimately familiar with Film Master while working on Scavengers, our first vfx show, as we were so short staffed that I ended up conforming most of the ~200 compositing shots that I did myself, as well as the ~200 multi layer exr cg shots that I processed through flame for the show.
Now Film Master is great for a lot of things, but at least in the versions we used, automating much of anything was next to impossible. I wrote scripts that would generate edls, and that helped us along, but that only handled one layer at a time, and we were expirimenting with using 4 exr layers.
So when we got the new system I was excited to see what it could do, and with some work I was able to do quite a bit. Mistika does everything on an attached storage system, where it reads and writes plain text files to the disk as if it were memory. So while the program doesn't offer an API, by modifying the project files on the disk while the program is running, we can do a lot to customize the behavior in real time.
The timeline files contained tens of thousands of nested bracketed strings that represented data layers, effects layers, etc. Each containing nested trees of bracketed strings that represented properties, matrices, values, etc. 
What I ended up doing was writing what I call a pseudo API. This recurses through the entire file, expands everything into objects, automatically generates classes, and automatically adds parent, child, getter, and setter methods to everything.
The final result is an importable library that looks very much like Nuke's API, that allowed me to write scripts and automatically execute Mistika renders all from my humble little python console. The impressive part was the compactness of the code I wrote to do it all. All told it was under 200 lines, some of the lines get executed over a million times per run, and it could read an entire project into memory in as little as 0.2s
The first script I wrote using it was a color correction synchronizer. Because we were doing both color correction and vfx simultaneously, the vfx artists often needed to know what the final result would look like. So my synchronizer script would generate a copy of the live timeline, replacing everything with cms test patterns, render through mistika, generate luts from the resulting patterns in Nuke, then dump them all into the matching shot folders to be used as a VIEWING_LUT in nuke.
Beyond this it didn't get much use unfortunately, as we got out of the vfx business soon after. But I still think it's an exciting achievement.
