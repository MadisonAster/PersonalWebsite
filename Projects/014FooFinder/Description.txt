
I created FooFinder as a tool to reduce the complexity of using relative imports in Python. Importing modules and packages from neighboring folders, parent folders, and child folders can all be done with a simple and clean syntax: from FooFinder import TheWorld. Truly modular project structures become possible with this tool. My primary use case for this has been to provide complete modularity to my code garden that I call <a target='_blank'  href='https://github.com/MadisonAster/KungFu'>KungFu</a>. If you want to build a project with an unconventional project structure, or you just need to get things working quickly, FooFinder is the duct tape you need. Jupyter notebooks, and other scripts that need folder structures to organize ideas more than to organize code, are also prime use cases. Additionally, if you're in the beginning stages of a new project, and you're still experimenting with the structure, FooFinder can give you the ability to move your modules and packages around freely while you settle on a final organization.
pip install <a target='_blank'  href='https://github.com/MadisonAster/FooFinder'>FooFinder</a>